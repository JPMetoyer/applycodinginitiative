@use "./variables" as app; 

* {
    padding: 0px; 
    border: none; 
    margin: 0px; 
    box-sizing: border-box;

    color: inherit; 
    fill: inherit;
    z-index: inherit;
    stroke: inherit; 
    stroke-width: inherit;

    font-family: app.$typeface-body;
    font-size: inherit;
    font-weight: app.$weight-regular;
    line-height: inherit;
}

html {
    font-size: 16px;
    stroke-width: 1.0px;
    line-height: 150%;
    background-color: app.$color-background;
}
@media screen and (min-width: 840px) and (min-height: 680px)
{
    html 
    {
        font-size: 18px;
    }
}

body {
    padding-top: 4rem;
}

main {
    // padding: 0px 4vw; 
    min-height: calc(100svh - 4rem);
}

main > section {
    height: calc(100svh - 22vh);
}

h1, h1 > * {
    color: app.$color-foreground;
    font-size: 2rem;
    font-weight: app.$weight-bold;
    line-height: 120%;

}

h2, h2 > * {
    font-weight: app.$weight-bold;
    color: app.$color-foreground;

    font-size: 1.5rem;
}

h3, h3 > * {
    font-weight: app.$weight-bold;
    font-size: 1.2rem;
    color: app.$color-foreground;

}

p, p > *, input, input > * {
    font-size: 1rem;
    font-weight: app.$weight-regular;
    color: app.$color-foreground;
    line-height: 142%;

}

button, a {
    cursor: pointer;
    text-decoration: none;
}

a {
    color: app.$color-foreground;
}


button, a.button {
    padding: 0.3rem 1rem; 
    border-radius: 2rem; 
    background-color: app.$color-brand;
    color: #EBEFF2;
    width: max-content;

}

button.secondary, a.button.secondary {
    background-color: rgba(251, 45, 45, 0.16);
    color: app.$color-brand;
}

button.tertiary, a.button.tertiary {
    background-color: transparent;
    border: 0.8px solid app.$color-brand;
    color: app.$color-brand;
}


button:disabled {
    background-color: app.$color-shade;
    cursor: default;
}


* > img {
    max-width: 100%; 
    max-height: 100%;
}

svg {
    width: 100%;
    height: 100%;
}

.icon {
    position: relative;

    > svg {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translateX(-50%) translateY(-50%);
    }
}

.scrollbar-hidden {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;

    &::-webkit-scrollbar {
        display: none;
    }
}

.bisect {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr;
    gap: 1rem 1rem; 
    height: calc(100svh - 0rem);

    padding: 0px 6vw;

    > * {
        margin: auto 0px;
    }

    @media screen and (max-width: 960px) {

        // > :nth-child(1).graphic {
        //     transform: translateY(7vh);
        //     margin: auto 0px auto 0px;
        // }

        > :nth-child(2) {
            transform: translateY(-3vh);
        }

        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr;
    }
}


.bisect .content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 1rem;
}

.bisect .graphic {
    display: flex;
    align-items: center;
    justify-content: center;

    > img {
        border-radius: 1rem;
        filter: drop-shadow(0rem 1rem 3rem rgba(40, 42, 54, 0.08));
    }
}
